version: '3'
services:
    redis:
      image: "redis:alpine"

    db:
      container_name: postgres
      image: postgres
      environment:
        POSTGRES_PASSWORD: password123
      # ports:
      #   - "5432:5432"
      #   (HOST:CONTAINER)
      volumes:
        - pgdata:/var/lib/postgresql/data/

    nginx:
        container_name: nginx-container
        build: ./nginx
        restart: always
        ports:
        # - "8080:80"
        - "80:80"
        volumes:
        - api_data:/docker_api
        - ./log:/var/log/nginx
        depends_on:
        - web_api

    web_api:
        container_name: web-api-container
        build: ./api
        restart: always
        # command: uwsgi  --emperor uwsgi.ini
        command: uwsgi --ini uwsgi.ini
        volumes:
        - api_data:/docker_api
        # ports:
        # - "8002:8000" 
        depends_on:
        - db

    migration_and_run_worker:
        container_name: celery
        build: ./api
        volumes:
          - api_data:/docker_api
        command: bash -c "python manage.py migrate && celery -A coconut_server worker -l info"
        depends_on:
          - redis
          - web_api
    # # auto migrate django
    migration:
        build: ./api
        command:
            - /bin/sh
            - -c
            - |
              pip install -r requirements.txt
              python manage.py collectstatic --noinput
              python manage.py migrate
              python manage.py makemigrations user
              python manage.py makemigrations shop
              python manage.py makemigrations cart
              python manage.py makemigrations cartItem
              python manage.py makemigrations orders
              python manage.py migrate
              echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'pass')" | python manage.py shell
              python manage.py loaddata fixtures/*
        volumes:
        - api_data:/docker_api
        depends_on:
        - db
        - web_api

volumes:
  api_data:
  pgdata:

